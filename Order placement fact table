# 下单事务事实表，业务库的order_info表会新增一条数据，order_detail表新增一至多条数据，
# 如果参加了活动，order_detail_activity新增一至多条数据，
# 如果使用了优惠券，order_detail_coupon新增一至多条数据
# First day loading
set hive.exec.dynamic.partition.mode=nonstrict; 
insert overwrite table dwd_trade_order_detail_inc partition (dt) 
select 
        od.id, 
        order_id, 
        user_id, 
        sku_id, 
        province_id, 
        activity_id, 
        activity_rule_id, 
        coupon_id, 
        date_format(create_time, 'yyyy-MM-dd') date_id, 
        create_time, 
        sku_num, 
        split_original_amount, 
        nvl(split_activity_amount,0.0), 
        nvl(split_coupon_amount,0.0), 
        split_total_amount, 
        date_format(create_time,'yyyy-MM-dd') 
from 
( 
    select 
        data.id, 
        data.order_id, 
        data.sku_id, 
        data.create_time, 
        data.sku_num, 
        data.sku_num * data.order_price split_original_amount, 
        data.split_total_amount, 
        data.split_activity_amount, 
        data.split_coupon_amount 
    from ods_order_detail_inc 
    where dt = '2022-06-08' 
    and type = 'bootstrap-insert' 
) od 
left join 
( 
    select 
        data.id, 
        data.user_id, 
        data.province_id 
    from ods_order_info_inc 
    where dt = '2022-06-08' 
    and type = 'bootstrap-insert' 
) oi 
on od.order_id = oi.id 
left join 
( 
    select 
        data.order_detail_id, 
        data.activity_id, 
        data.activity_rule_id 
    from ods_order_detail_activity_inc 
    where dt = '2022-06-08' 
    and type = 'bootstrap-insert' 
) act 
on od.id = act.order_detail_id 
left join 
( 
    select 
        data.order_detail_id, 
        data.coupon_id 
    from ods_order_detail_coupon_inc 
    where dt = '2022-06-08' 
    and type = 'bootstrap-insert' 
) cou 
on od.id = cou.order_detail_id;
# Daily loading
insert overwrite table dwd_trade_order_detail_inc partition (dt='2022-06-09') 
select
    od.id, 
    order_id, 
    user_id,
    sku_id, 
    province_id, 
    activity_id, 
    activity_rule_id, 
    coupon_id, 
    date_id, 
    create_time, 
    sku_num, 
    split_original_amount, 
    nvl(split_activity_amount,0.0), 
    nvl(split_coupon_amount,0.0), 
    split_total_amount 
from 
( 
    select 
        data.id, 
        data.order_id, 
        data.sku_id, 
        date_format(data.create_time, 'yyyy-MM-dd') date_id, 
        data.create_time, 
        data.sku_num, 
        data.sku_num * data.order_price split_original_amount, 
        data.split_total_amount, 
        data.split_activity_amount, 
        data.split_coupon_amount 
    from ods_order_detail_inc 
    where dt = '2022-06-09' 
    and type = 'insert' 
) od 
left join 
( 
    select 
        data.id, 
        data.user_id, 
        data.province_id 
    from ods_order_info_inc 
    where dt = '2022-06-09' 
    and type = 'insert' 
) oi 
on od.order_id = oi.id 
left join 
( 
    select 
        data.order_detail_id, 
        data.activity_id, 
        data.activity_rule_id 
    from ods_order_detail_activity_inc 
    where dt = '2022-06-09' 
    and type = 'insert' 
) act 
on od.id = act.order_detail_id 
left join 
( 
    select 
        data.order_detail_id, 
        data.coupon_id 
    from ods_order_detail_coupon_inc 
    where dt = '2022-06-09' 
   and type = 'insert' 
) cou 
on od.id = cou.order_detail_id;
